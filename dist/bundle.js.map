{"version":3,"sources":["webpack://need-for-js.part2/./src/garage.js","webpack://need-for-js.part2/./src/index.js","webpack://need-for-js.part2/./src/speakWithBoss.js","webpack://need-for-js.part2/webpack/bootstrap","webpack://need-for-js.part2/webpack/runtime/define property getters","webpack://need-for-js.part2/webpack/runtime/hasOwnProperty shorthand","webpack://need-for-js.part2/webpack/runtime/make namespace object","webpack://need-for-js.part2/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAY;;AAEZ;;AAEO;AACP;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;AACA;;;AAGA;;AAEO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBY;AACZ,CAAsC;AACW;;;;;;AAMjD;AACA;AACA;AACA,GAAG;;;AAGH,CAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;;;AAG1D,4CAA4C,kDAAiB;AAC7D,iDAAiD,mDAAkB;;AAEnE;AACA;AACA;AACA;;AAEA;AACA,CAAQ;AACR;AACA;AACA,CAAQ;AACR;AACA,CAAQ;AACR;AACA;;AAEA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,+DAAiC;AACnC,CAAC,cAAc;AACf;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,kEAAkE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sDAAqB;AAC/B,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,8BAA8B;AAC9B,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,GAAG;AACtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtX4E;;AAE5E;AACA;;AAEA;AACA;AACA;AACA;;;;;AAKA;AACO,kDAAkD,8CAAU,SAAS,6CAAS,cAAc,0CAAM,gBAAgB,4CAAQ;AACjI;AACA;AACA;AACA,0BAA0B,8CAAU;AACpC,0BAA0B,6CAAS;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA,MAAM,0DAAsB;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,6CAAS;AACpD,KAAK;AACL,GAAG;;AAEH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;;;;;;;;UChGA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["'use strict'\r\n\r\n// Открыть гараж\r\n\r\nexport const openGarage = function(modal){\r\n  modal.style.visibility = 'inherit';\r\n  modal.style.opacity = '1';\r\n  console.log('Открыл');\r\n}\r\n\r\n// Закрыть гараж\r\n\r\nexport const closeGarage = function(modal){\r\n  modal.style.visibility = 'hidden';\r\n  modal.style.opacity = '0';\r\n  console.log('Закрыл');\r\n}\r\n\r\n\r\n// Добавить машину в гараж \r\n\r\nexport const addCarInGarage = function(car, modal){\r\n  let item = car.cloneNode();\r\n  modal.appendChild(item);\r\n  console.log('Добавил');\r\n}","'use strict'\r\nimport * as garage from './garage.js'; // Гараж\r\nimport * as speakWithBoss from './speakWithBoss'; //диалог с Боссом\r\n\r\n\r\n\r\n\r\n\r\n  let load = document.querySelector('.load');\r\n  window.addEventListener('load', () => {\r\n    load.classList.add('hidden');\r\n  })\r\n\r\n\r\n export const score = document.querySelector('.score'), // очки\r\n  start = document.querySelector('.start'), // кнопка старта\r\n  gameArea = document.querySelector('.gameArea'), // игровое поле\r\n  car = document.createElement('div'), //авто игрока \r\n  rec = document.querySelector('.record'), //авто противников \r\n  complexity = document.querySelector('.complexity'), //поле выбора сложности\r\n  bgArea = document.querySelector('.backgroundArea'), //фон с домиками\r\n  compRange = document.querySelector('#complexityRange'), //Range выбора сложности \r\n  garageBtn = document.querySelector('.btnGarage'), //Кнопка \"Открыть гараж\"\r\n  btnGarageClose = document.querySelector('.btnGarageClose'), //Кнопка \"Закрыть гараж\"\r\n  garageWrap = document.querySelector('.garage'), //Гараж (модалка)\r\n  garageWrapCar = document.querySelector('.garage__wrap'); //Гараж (обёртка для машин)\r\n\r\n\r\n  garageBtn.addEventListener('click', () => garage.openGarage(garageWrap));\r\n  btnGarageClose.addEventListener('click', () => garage.closeGarage(garageWrap));\r\n\r\n  // ID функции - прорисовщика\r\n  let myReq, secondMyReq;\r\n// Массив с рекордами\r\n  let record = [];\r\n\r\n // Создание элемента босса и диалогового окна\r\n export const enemyBoss = document.createElement('div');\r\n          enemyBoss.classList.add('enemyBoss');\r\n          // Окно\r\n export const dialogArea = document.createElement('div');\r\n bgArea.appendChild(dialogArea);\r\n export const btnReady = document.createElement('button');\r\n// Фоновая песня (Пока что просто объект Audio)\r\nlet audio = new Audio();\r\n\r\ncar.classList.add('car');\r\n// Начало по нажатии на Enter \r\nexport function enterGame(e) {\r\n  if (e.code === 'Enter') {\r\n    startGame();\r\n  }\r\n}\r\n\r\ndocument.addEventListener('keydown', startRun);\r\ndocument.addEventListener('keyup', stopRun);\r\n\r\nconst keys = {\r\n  ArrowUp: false,\r\n  ArrowDown: false,\r\n  ArrowRight: false,\r\n  ArrowLeft: false\r\n};\r\n\r\nconst setting = {\r\n  start: false,\r\n  score: 0,\r\n  speed: 0,\r\n  traffic: 3\r\n};\r\n\r\nlet speakWitchAngry = new Promise((resolve, reject) => {\r\n  speakWithBoss.firstSpeakWithAngry()\r\n}).then(() => {  // Когда диалог с боссом закончился \r\n  speakWitchAngry.addBtnSpeakBoss();\r\n});\r\n\r\n// Покупка машины\r\nfunction buyCar(){\r\n  // Обёртка\r\n  let buyCarWrap = document.createElement('div');\r\n  buyCarWrap.classList.add('buyCarWrap')\r\n  // Машины\r\n  let buyCar = document.createElement('div');\r\n  buyCar.classList.add('buyCar');\r\n  // Текст\r\n  let buyText = document.createElement('span');\r\n  // Купить Кнопка\r\n  let btnBuy = document.createElement('button');\r\n  btnBuy.classList.add('btnBuy');\r\n  btnBuy.textContent = 'Купить';\r\n  // Массив с машинами(чтобы удалять border)\r\n  let carArray = [];\r\n  // Каждая машина\r\n  for(let i = 1; i < 3; i++){\r\n    let buyCarItem = document.createElement('div');\r\n    buyCarItem.classList.add('buyCarItem');\r\n    buyCarItem.style.background = `transparent url('./image/car/${i}.png') center / cover no-repeat`;\r\n    buyCar.appendChild(buyCarItem);\r\n    carArray.push(buyCarItem);\r\n    //Клик по машине\r\n    buyCarItem.addEventListener('click', function checkItem(e){\r\n      //Убираем обводку с отстальных машин\r\n      carArray.forEach(item => {\r\n        item.style.border = 'none';\r\n      })\r\n      // Добавляем обводку к выбранной машине\r\n        let shopCar = e.target;\r\n        shopCar.style.border = '2px solid green';\r\n      // Добавляем обработчик на кнопку \"Купить\"\r\n        btnBuy.addEventListener('click', function(){\r\n          // По кнопке купить машина игрока меняется на ту, что выбрал\r\n          car.style.background = shopCar.style.background;\r\n          buyCarWrap.style.display = 'none';\r\n          // Добавляем машину в гараж\r\n          garage.addCarInGarage(car, garageWrapCar);\r\n      });\r\n      // Добавляем кнопку\r\n      buyCar.appendChild(btnBuy);\r\n    })\r\n  }\r\n  buyText.textContent = 'Купить машину';\r\n  buyCarWrap.appendChild(buyText);\r\n  buyCarWrap.appendChild(buyCar);\r\n  document.body.appendChild(buyCarWrap);\r\n}\r\n// Вызов функции покупки машины\r\nbuyCar();\r\n\r\n// Фоновая музыка\r\n\r\n\r\nfunction playSound() {\r\n  audio.src = './audio/1.mp3'; // Указываем путь к звуку \"клика\"\r\n  audio.autoplay = true; // Автоматически запускаем\r\n}\r\n\r\nfunction stopSound() {\r\n  audio.pause();\r\n  audio.currentTime = 0.0;\r\n}\r\n\r\nfunction startGame() {\r\n\r\n  // playSound()\r\n  // Скрываем сложность и \"Нажатие на старт\"\r\n  complexity.classList.add('hide');\r\n  start.classList.add('hide');\r\n  // Убираем нажатие на Enter \r\n  document.removeEventListener('keydown', enterGame);\r\n  // Скорость = выбранная сложность\r\n  setting.speed = +compRange.value;\r\n\r\n  setting.start = true;\r\n  // Очищаем игровое поле перед стартом игры\r\n  gameArea.innerHTML = '';\r\n  bgArea.innerHTML = '';\r\n\r\n  car.style.left = 125 + 'px';\r\n  car.style.top = 80 + '%';\r\n\r\n  // Полосы(имитация дороги)\r\n  for (let i = 0; i < 10; i++) {\r\n    const line = document.createElement('div');\r\n    line.classList.add('line');\r\n    // Позиции каждой черты(не путать с движением. Это просто расположение)\r\n    line.style.top = i * 80 + 'px';\r\n    // .y понадобится для движения дороги\r\n    line.y = i * 82;\r\n    gameArea.appendChild(line);\r\n  }\r\n\r\n  // Фон\r\n  for (let i = 0; i < 5; i++) {\r\n    const house = document.createElement('div');\r\n    house.classList.add('house');\r\n    house.style.backgroundImage = 'url(\"./image/home.webp\")';\r\n    // Позиции каждой черты(не путать с движением. Это просто расположение)\r\n    house.style.top = (i * 82) * -1 + 'px';\r\n    let ans = Math.random() * (bgArea.offsetWidth - 100);\r\n    if (ans > 900 || ans < 400) {\r\n      house.style.left = ans + 'px';\r\n    }\r\n    // .y понадобится для движения дороги\r\n    house.y = i * 120;\r\n    bgArea.appendChild(house);\r\n  }\r\n\r\n\r\n  // Движение машин\r\n  for (let i = 1; i < 4; i++) {\r\n    const enemy = document.createElement('div');\r\n    enemy.classList.add('enemy');\r\n    enemy.style.top = (i * 100) + 'px';\r\n    // Больше значение трафика - дольше друг от друга машины\r\n    enemy.y = -1 * 100 * setting.traffic * i + 1;\r\n    console.log(enemy.y)\r\n    enemy.style.top = enemy.y + 'px';\r\n    // По оси Х рандомное расположение \r\n    enemy.style.left = Math.random() * (gameArea.offsetWidth - 50) + 'px';\r\n    gameArea.appendChild(enemy);\r\n  }\r\n  // Сброс очков \r\n  setting.score = 0;\r\n  // Добавление авто\r\n  gameArea.appendChild(car);\r\n  // Фиксирование позиции авто \r\n  setting.x = car.offsetLeft;\r\n  setting.y = car.offsetTop;\r\n  playGame();\r\n}\r\n\r\nfunction playGame() {\r\n  if (setting.start) {\r\n    \r\n    setting.score += setting.speed;\r\n    score.textContent = setting.score;\r\n    moveRoad();\r\n    moveEnemy();\r\n    moveBg();\r\n    if (keys.ArrowLeft && setting.x > 0) {\r\n      setting.x -= setting.speed;\r\n    }\r\n    if (keys.ArrowRight && setting.x < (gameArea.offsetWidth - car.offsetWidth)) {\r\n      setting.x += setting.speed;\r\n    }\r\n    if (keys.ArrowUp && setting.y > 0) {\r\n      setting.y -= setting.speed;\r\n    }\r\n    if (keys.ArrowDown && setting.y < (gameArea.offsetHeight - car.offsetHeight)) {\r\n      setting.y += setting.speed;\r\n    }\r\n    car.style.left = setting.x + 'px';\r\n    car.style.top = setting.y + 'px';\r\n    // Функция повторяет прорисовку самой себя\r\n    myReq = requestAnimationFrame(playGame);\r\n  }\r\n  if(setting.score > 19999 && setting.score < 20005){\r\n    stopGame();\r\n    // firstSpeakWithAngry();\r\n    speakWitchAngry.then(() => {\r\n      numSpeak++;\r\n      setTimeout(() => {\r\n        // После 5 сек. добавляем кнопку\r\n        dialogArea.appendChild(btnReady);\r\n        btnReady.textContent = 'Ехать дальше';\r\n        // И обработчик клика по ней\r\n        btnReady.addEventListener('click', () => {\r\n          // Очищаем диалог\r\n          dialogArea.innerHTML = ' ';\r\n          // Очищаем фон\r\n          dialogArea.style.display = 'none';\r\n          enemyBoss.style.display = 'none';\r\n          // Нажатие на Enter\r\n          continueGame();\r\n        })\r\n      }, 1000)\r\n    });\r\n    setting.score +=5;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Если нажата кнопка - её значение в массиве становится true \r\n// и срабатывает обработчик по движению в опр. сторону\r\nfunction startRun(e) {\r\n  e.preventDefault();\r\n  keys[e.key] = true;\r\n}\r\n\r\nfunction stopRun(e) {\r\n  keys[e.key] = false;\r\n}\r\n\r\n\r\n\r\n\r\nfunction moveRoad() {\r\n  // Получаем все линии по тегу line\r\n  let lines = document.querySelectorAll('.line');\r\n  for (let key of lines) {\r\n    // Каждой линии прибавляем скорость движения и пробрасываем в стили через .у\r\n    key.y += setting.speed;\r\n    key.style.top = key.y + 'px';\r\n    // Если отступ линии сверзу больше, чем игровое поле - линия уходит наверх\r\n    if (parseInt(key.style.top) > (gameArea.offsetHeight)) {\r\n      key.y = -82;\r\n    }\r\n  }\r\n}\r\n// Движение фона \r\n function moveBg() {\r\n  // Получаем все линии по тегу house\r\n  let houses = document.querySelectorAll('.house');\r\n  for (let key of houses) {\r\n    // Каждой линии прибавляем скорость движения и пробрасываем в стили через .у\r\n    key.y += setting.speed;\r\n    key.style.top = key.y + 'px';\r\n    // Если отступ линии сверзу больше, чем игровое поле - линия уходит наверх\r\n    if (parseInt(key.style.top) > (gameArea.offsetHeight)) {\r\n      key.y = -120;\r\n      // Положение по X  - полная ширина минус ширина элемента\r\n      let ans = Math.random() * (bgArea.offsetWidth - 100);\r\n      if (ans > 900 || ans < 400) {\r\n        key.style.left = ans + 'px';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction moveEnemy() {\r\n  let enemys = document.querySelectorAll('.enemy');\r\n  // Получение позиции авто и противников\r\n  for (let key of enemys) {\r\n    // Получаем позицию авто игрока и противников \r\n    let carRect = car.getBoundingClientRect();\r\n    let enemyRect = key.getBoundingClientRect();\r\n    // Если координаты перескаются - событие окончания игры\r\n    if (carRect.top < enemyRect.bottom && carRect.right > enemyRect.left &&\r\n      carRect.left < enemyRect.right && carRect.bottom > enemyRect.top) {\r\n      setting.start = false;\r\n      start.classList.remove('hide');\r\n      complexity.classList.remove('hide');\r\n      // Останавливаем песню\r\n      stopSound();\r\n      // Добавляем рекорд в массив и выводим в div\r\n      record.push(setting.score);\r\n      rec.innerHTML = 'Рекорд = ' + Math.max(...record);\r\n      // Возвращаем нажатие на Enter\r\n      document.addEventListener('keydown', enterGame);\r\n    }\r\n    // Прибавляем каждой машине скорость и пробрасываем в стили с помощью .y\r\n    key.y += setting.speed;\r\n    key.style.top = key.y + 'px';\r\n    // Если мащина ушла вниз - пробрасываем наверх с изменением позиции по X \r\n    if (key.y > document.documentElement.clientHeight) {\r\n      key.y = -100 * setting.traffic;\r\n      key.style.left = Math.random() * (gameArea.offsetWidth - 50) + 'px';\r\n      let im = Math.round(Math.random() * 3) + 1;\r\n      key.style.background = `url('./image/enemy/${im}.webp') center / cover no-repeat`;\r\n    }\r\n  }\r\n}\r\n\r\n// Остановка движения\r\n\r\nfunction stopGame(e = 'Space') {\r\n  if (e.code === 'Space' || e == 'Space'){\r\n    // Отменяем анимацию\r\n    window.cancelAnimationFrame(myReq);\r\n    // Убираем паузу\r\n    document.removeEventListener('keydown', stopGame);\r\n    // Добавляем продолжение игры\r\n    document.addEventListener('keydown', continueGame);\r\n  }\r\n}\r\n\r\n\r\n// Продолжение движения\r\n\r\nfunction continueGame(e = 'Space') {\r\n  if (e.code === 'Space' || e == 'Space'){\r\n    // Добавляем старт игры\r\n    myReq = window.requestAnimationFrame(playGame);\r\n    // Добавляем паузу\r\n    document.addEventListener('keydown', stopGame);\r\n    // Убираем продолжение (потому что ты только что продолжил, йобана) \r\n    document.removeEventListener('keydown', continueGame);\r\n    document.removeEventListener('keydown', enterGame);\r\n  }\r\n}\r\ndocument.addEventListener('keydown', stopGame);\r\n","import { bgArea, dialogArea, enemyBoss, btnReady, enterGame } from './index'\r\n\r\n// Массив с фразами антагониста\r\nlet numSpeak = 0;\r\n\r\nconst speakAngryBoss = [\r\n  ['Эй, придурок. Мне сказали, ты хочешь бросить вызов моим парням? Думаешь, мы дадим шанс какому-то выскочке? Для начала набери 20 000 очков чтобы показать себя'],\r\n  ['Неплохо, придурок, но для нас ты всё равно лох']\r\n]\r\n\r\n\r\n\r\n\r\n  // Стартовый диалог со злодеем \r\nexport const firstSpeakWithAngry = function(dialogWrap = dialogArea, boss = enemyBoss, bgAreaSec = bgArea, btnReadySec = btnReady){\r\n    dialogWrap.classList.add('dialogArea');\r\n    boss.style.display = 'block';\r\n    dialogWrap.style.display = 'block';\r\n    bgAreaSec.appendChild(dialogArea);\r\n    bgAreaSec.appendChild(enemyBoss);\r\n    // Плавное появление букв\r\n    let speak = speakAngryBoss[numSpeak].toString();\r\n    let arr = speak.split('');\r\n\r\n    // Скорость появления букв\r\n    let i = 0.02;\r\n    arr.map((key) => {\r\n      let span = document.createElement('span');\r\n      span.textContent = key;\r\n      span.style.animation = `1s ghost ${i}s forwards`;\r\n      i += 0.02;\r\n      dialogArea.appendChild(span);\r\n})\r\n\r\nconsole.log('Работаю')\r\n  numSpeak++;\r\n  setTimeout(() => {\r\n    // После 1 сек. добавляем кнопку\r\n    dialogWrap.appendChild(btnReadySec);\r\n    btnReadySec.textContent = 'Начать';\r\n    // И обработчик клика по ней\r\n    btnReadySec.addEventListener('click', () => {\r\n      // Очищаем диалог\r\n      dialogWrap.innerHTML = ' ';\r\n      // Очищаем фон\r\n      dialogWrap.style.display = 'none';\r\n      boss.style.display = 'none';\r\n      // Нажатие на Enter\r\n      document.addEventListener('keydown', enterGame);\r\n    })\r\n  }, 1000)\r\n\r\n}\r\n\r\n\r\n\r\n// (dialogWrap = dialogArea, boss = enemyBoss, bgAreaSec = bgArea) => {\r\n//     console.log(dialogWrap)\r\n//     dialogWrap.classList.add('dialogArea');\r\n//     boss.style.display = 'block';\r\n//     dialogWrap.style.display = 'block';\r\n//     bgAreaSec.appendChild(dialogArea);\r\n//     bgAreaSec.appendChild(enemyBoss);\r\n//     // Плавное появление букв\r\n//     let speak = speakAngryBoss[numSpeak].toString();\r\n//     let arr = speak.split('');\r\n\r\n//     // Скорость появления букв\r\n//     let i = 0.02;\r\n//     arr.map((key) => {\r\n//       let span = document.createElement('span');\r\n//       span.textContent = key;\r\n//       span.style.animation = `1s ghost ${i}s forwards`;\r\n//       i += 0.02;\r\n//       dialogArea.appendChild(span);\r\n//   })\r\n// }\r\n\r\n// export const addBtnSpeakBoss = () => {\r\n//   console.log('Работаю')\r\n//   numSpeak++;\r\n//   setTimeout(() => {\r\n//     // После 1 сек. добавляем кнопку\r\n//     dialogArea.appendChild(btnReady);\r\n//     btnReady.textContent = 'Начать';\r\n//     // И обработчик клика по ней\r\n//     btnReady.addEventListener('click', () => {\r\n//       // Очищаем диалог\r\n//       dialogArea.innerHTML = ' ';\r\n//       // Очищаем фон\r\n//       dialogArea.style.display = 'none';\r\n//       enemyBoss.style.display = 'none';\r\n//       // Нажатие на Enter\r\n//       document.addEventListener('keydown', enterGame);\r\n//     })\r\n//   }, 1000)\r\n// }\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/index.js\");\n"],"sourceRoot":""}